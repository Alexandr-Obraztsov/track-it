import { TaskEntity } from '../../entities/Task'
import { RoleEntity } from '../../entities/Role'
import { TaskOperation, RoleOperation } from '../../types'
import { FormatRoleOperationParams } from './types'
import { UserFormatter } from './userFormatter'
import { MessageFormatter } from './messageFormatter'

/**
 * –§–æ—Ä–º–∞—Ç—Ç–µ—Ä –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏
 * –û—Ç–≤–µ—á–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∑–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ–ø–µ—Ä–∞—Ü–∏–π (—Å–æ–∑–¥–∞–Ω–∏–µ, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ, —É–¥–∞–ª–µ–Ω–∏–µ)
 */
export class OperationFormatter {
	/**
	 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –∑–∞–¥–∞—á–µ–π
	 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ–ø–µ—Ä–∞—Ü–∏–π CRUD —Å –∑–∞–¥–∞—á–∞–º–∏
	 */
	static formatTaskOperation(operation: TaskOperation, success: boolean, task: TaskEntity): string {		
		switch (operation.operation) {
			case 'delete':
				if (success) {
					return `üóëÔ∏è <b>–ó–∞–¥–∞—á–∞ —É–¥–∞–ª–µ–Ω–∞</b>\n${task.readableId}: ${task.title}`
				} else {
					return `‚ùå <b>–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è</b>\n–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É ${task.readableId}`
				}
				
			case 'update':
				if (success && operation.updateData) {
					const changes = []
					
					if (operation.updateData.title && operation.updateData.title !== task.title) {
						changes.push(`–Ω–∞–∑–≤–∞–Ω–∏–µ: "${task.title}" ‚Üí "${operation.updateData.title}"`)
					}
					
					if (operation.updateData.description !== undefined && operation.updateData.description !== task.description) {
						const oldDesc = task.description || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'
						const newDesc = operation.updateData.description || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'
						changes.push(`–æ–ø–∏—Å–∞–Ω–∏–µ: "${oldDesc}" ‚Üí "${newDesc}"`)
					}
					
					if (operation.updateData.deadline !== undefined) {
						const oldDeadline = task.deadline ? new Date(task.deadline).toLocaleDateString('ru-RU') : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'
						const newDeadline = operation.updateData.deadline ? new Date(operation.updateData.deadline).toLocaleDateString('ru-RU') : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'
						if (oldDeadline !== newDeadline) {
							changes.push(`–¥–µ–¥–ª–∞–π–Ω: ${oldDeadline} ‚Üí ${newDeadline}`)
						}
					}
					
					if (operation.updateData.isCompleted !== undefined && operation.updateData.isCompleted !== task.isCompleted) {
						const oldStatus = task.isCompleted ? MessageFormatter.TASK_STATUS.COMPLETED : MessageFormatter.TASK_STATUS.IN_PROGRESS
						const newStatus = operation.updateData.isCompleted ? MessageFormatter.TASK_STATUS.COMPLETED : MessageFormatter.TASK_STATUS.IN_PROGRESS
						changes.push(`—Å—Ç–∞—Ç—É—Å: ${oldStatus} ‚Üí ${newStatus}`)
					}
					
					if (changes.length > 0) {
						return `üîÑ <b>–ó–∞–¥–∞—á–∞ ${task.readableId} –æ–±–Ω–æ–≤–ª–µ–Ω–∞</b>\n${changes.map(c => `‚Ä¢ ${c}`).join('\n')}`
					} else {
						return `üîÑ <b>–ó–∞–¥–∞—á–∞ ${task.readableId} –æ–±–Ω–æ–≤–ª–µ–Ω–∞</b>\nüìù –ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ`
					}
				} else {
					return `‚ùå <b>–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è</b>\n–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∑–∞–¥–∞—á—É ${task.readableId}`
				}
				
			case 'complete':
				if (success) {
					return `‚úÖ <b>–ó–∞–¥–∞—á–∞ ${task.readableId} –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!</b>\n${task.title}`
				} else {
					return `‚ùå <b>–û—à–∏–±–∫–∞</b>\n–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–º–µ—Ç–∏—Ç—å –∑–∞–¥–∞—á—É ${task.readableId} –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é`
				}
				
			default:
				return `‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è —Å –∑–∞–¥–∞—á–µ–π ${task.readableId}`
		}
	}
}
