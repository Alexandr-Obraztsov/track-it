import { Chat } from '../entities/Chat';
import { User } from '../entities/User';
import { Task as TaskEntity } from '../entities/Task';

export const GEMINI_PROMPTS = {
  // Промпт для извлечения групповых задач из текста/аудио
  extractGroupTasks: (text: string, currentTime: Date, chat: Chat, existingTasks: TaskEntity[] = []): string => {
    const usersInfo = chat.userChatRoles?.map(ucr => ({
      id: ucr.user.id,
      username: ucr.user.username,
      firstName: ucr.user.firstName,
      lastName: ucr.user.lastName || null,
      role: ucr.role?.title || null
    })) || [];

    const rolesInfo = chat.chatRoles?.map(cr => ({
      id: cr.role.id,
      title: cr.role.title,
      createdAt: cr.role.createdAt ? new Date(cr.role.createdAt).toISOString() : null
    })) || [];

    const existingTasksInfo = existingTasks.length > 0 
      ? existingTasks.map(task => ({
          id: task.id,
          title: task.title,
          description: task.description || null,
          assignedUserId: task.assignedUserId || null,
          assignedRoleId: task.assignedRoleId || null,
          deadline: task.deadline ? (task.deadline instanceof Date ? task.deadline.toISOString().split('T')[0] : task.deadline) : null
        }))
      : [];

    return `Извлечение групповых задач из сообщения пользователя.

КОНТЕКСТ:
- Текущее время: ${currentTime.toISOString()}
- Чат ID: ${chat.id}
- Название чата: "${chat.title}"
- Дата создания чата: ${chat.createdAt ? new Date(chat.createdAt).toISOString() : 'Не указана'}
- Message ID: ${chat.messageId}

УЧАСТНИКИ ЧАТА (формат JSON):
${JSON.stringify(usersInfo, null, 2)}

ДОСТУПНЫЕ РОЛИ В ЧАТЕ (формат JSON):
${JSON.stringify(rolesInfo, null, 2)}

СУЩЕСТВУЮЩИЕ ЗАДАЧИ В ЧАТЕ (формат как в ответе):
${JSON.stringify(existingTasksInfo, null, 2)}

СООБЩЕНИЕ ПОЛЬЗОВАТЕЛЯ:
"${text}"

ЗАДАЧА:
Проанализируй сообщение и извлеки из него ВСЕ возможные задачи. Будь максимально агрессивным в поиске задач:

1. НОВЫЕ ЗАДАЧИ (newTasks) - ВСЕГДА разбивай большие задачи на более мелкие подзадачи
2. ОБНОВЛЕНИЯ ЗАДАЧ (updatedTasks) - используй ID из существующих задач выше

ИЗВЛЕКАЙ ЗАДАЧИ ИЗ:
- Вопросов: "А что с API?" → "Проверить API"
- Жалоб: "У нас проблемы с сервером" → "Исправить проблемы с сервером"  
- Планов: "Завтра нужно..." → "Выполнить завтрашние дела"
- Обсуждений: "Может стоит..." → "Рассмотреть предложение"
- Напоминаний: "Не забудь..." → "Выполнить напоминание"
- Просьб: "Можешь..." → "Выполнить просьбу"
- Идей: "Хорошо бы..." → "Реализовать идею"
- Эмоций: "Устал от этого" → "Решить проблему"
- Проблем: "Не работает" → "Исправить неполадку"

ВАЖНО: Разбивай сложные задачи на простые подзадачи. Например:
- "Создать веб-сайт" → ["Создать дизайн", "Настроить сервер", "Написать код", "Протестировать"]
- "Организовать мероприятие" → ["Найти место", "Пригласить гостей", "Подготовить программу", "Купить еду"]

ПРИМЕРЫ ПРАВИЛЬНОГО ФОРМАТА ДАТ:
- "Завтра в 15:00" → "2024-01-16T15:00:00+03:00"
- "Через неделю" → "2024-01-22T12:00:00+03:00"
- "К концу месяца" → "2024-01-31T23:59:59+03:00"

ПРИМЕР ОБНОВЛЕНИЯ ЗАДАЧИ:
Если пользователь говорит: "Измени задачу Создать API на Создать REST API"
И в списке есть задача: ID: 5, Title: "Создать API"
То в updatedTasks должно быть: {"id": 5, "title": "Создать REST API", ...}
НЕ: {"id": "Создать API", ...} - это НЕПРАВИЛЬНО!

КРИТИЧЕСКОЕ ТРЕБОВАНИЕ: Для обновления существующих задач ты ОБЯЗАН использовать ТОЛЬКО числовой ID задачи из списка "СУЩЕСТВУЮЩИЕ ЗАДАЧИ В ЧАТЕ" выше. НЕ используй заголовки, описания или другие поля для идентификации задачи - ТОЛЬКО ID! НЕ создавай новые ID и НЕ используй отрицательные числа!

КРИТИЧЕСКИ ВАЖНО: 
- Заголовок задачи должен быть кратким (2-3 слова) и описывать суть задачи
- Описание добавляй только если заголовок недостаточно информативен
- Остальные поля (assignedUserId, assignedRoleId, deadline) указывай только если есть конкретные рекомендации
- Дедлайн указывай в формате ISO 8601 с часовым поясом +3 (Московское время): "YYYY-MM-DDTHH:mm:ss+03:00"
- Если в сообщении нет задач - верни пустые массивы
- ДЛЯ ОБНОВЛЕНИЯ ЗАДАЧ: id ОБЯЗАТЕЛЬНО должен быть взят из списка существующих задач выше
- НЕ ИСПОЛЬЗУЙ отрицательные числа, ноль или несуществующие ID для id
- Если не можешь точно определить ID существующей задачи - НЕ добавляй её в updatedTasks
- ПРИМЕР: Если пользователь говорит "измени задачу Создать API на Создать REST API", найди задачу с заголовком "Создать API" в списке выше и используй её ID (например, 5), а НЕ заголовок
- ОТВЕЧАЙ ТОЛЬКО JSON БЕЗ MARKDOWN БЛОКОВ И ДОПОЛНИТЕЛЬНОГО ТЕКСТА

КРИТИЧЕСКИ ВАЖНО:
- Извлекай задачи из ЛЮБЫХ упоминаний действий
- Если сомневаешься - создавай задачу
- Лучше создать лишнюю задачу, чем пропустить важную
- Превращай любые проблемы, планы, идеи в конкретные задачи
- Дедлайны указывай в формате ISO 8601 с московским временем: "2024-01-15T14:30:00+03:00"

ФОРМАТ ОТВЕТА (только JSON):
{
  "newTasks": [
    {
      "title": "Создать API",
      "description": "Описание задачи (опционально)",
      "assignedUserId": number | null,
      "assignedRoleId": number | null,
      "deadline": "YYYY-MM-DDTHH:mm:ss+03:00" | null
    }
  ],
  "updatedTasks": [
    {
      "id": number, // ОБЯЗАТЕЛЬНО: только числовой ID из списка существующих задач выше (НЕ заголовок!)
      "title": "новое название" | null, // новое название задачи (если изменяется)
      "description": "новое описание" | null, // новое описание задачи (если изменяется)
      "assignedUserId": number | null, // ID пользователя для назначения (если изменяется)
      "assignedRoleId": number | null, // ID роли для назначения (если изменяется)
      "deadline": "YYYY-MM-DDTHH:mm:ss+03:00" | null // новый дедлайн (если изменяется)
    }
  ]
}`;
  },

  // Промпт для извлечения личных задач из текста/аудио
  extractPersonalTasks: (text: string, currentTime: Date, user: User, existingTasks: TaskEntity[] = []): string => {
    const existingTasksInfo = existingTasks.length > 0
      ? existingTasks.map(task => ({
          id: task.id,
          title: task.title,
          description: task.description || null,
          assignedUserId: task.assignedUserId || null,
          assignedRoleId: task.assignedRoleId || null,
          deadline: task.deadline ? (task.deadline instanceof Date ? task.deadline.toISOString().split('T')[0] : task.deadline) : null
        }))
      : [];

    return `Извлечение личных задач из сообщения пользователя.

КОНТЕКСТ:
- Текущее время: ${currentTime.toISOString()}
- Пользователь ID: ${user.id}
- Username: ${user.username}
- Имя: ${user.firstName}
- Фамилия: ${user.lastName || 'Не указана'}
- Дата регистрации: ${user.createdAt ? new Date(user.createdAt).toISOString() : 'Не указана'}

СУЩЕСТВУЮЩИЕ ЗАДАЧИ ПОЛЬЗОВАТЕЛЯ (формат как в ответе):
${JSON.stringify(existingTasksInfo, null, 2)}

СООБЩЕНИЕ ПОЛЬЗОВАТЕЛЯ:
"${text}"

ЗАДАЧА:
Проанализируй сообщение и извлеки из него ВСЕ возможные личные задачи. Будь максимально агрессивным в поиске задач:

1. НОВЫЕ ЛИЧНЫЕ ЗАДАЧИ (newTasks) - ВСЕГДА разбивай большие задачи на более мелкие подзадачи
2. ОБНОВЛЕНИЯ ЗАДАЧ (updatedTasks) - используй ID из существующих задач выше

ИЗВЛЕКАЙ ЛИЧНЫЕ ЗАДАЧИ ИЗ:
- Планов: "Хочу..." → "Реализовать желание"
- Проблем: "У меня проблема с..." → "Решить проблему"
- Целей: "Нужно достичь..." → "Достичь цель"
- Привычек: "Должен..." → "Выполнить обязательство"
- Мечтаний: "Мечтаю о..." → "Реализовать мечту"
- Обучения: "Хочу изучить..." → "Изучить новое"
- Здоровья: "Нужно заняться..." → "Позаботиться о здоровье"
- Отношений: "Стоит поговорить с..." → "Наладить отношения"
- Эмоций: "Устал от..." → "Решить проблему"
- Жалоб: "Болит..." → "Позаботиться о здоровье"

ВАЖНО: Разбивай сложные задачи на простые подзадачи. Например:
- "Изучить программирование" → ["Изучить основы", "Практиковаться", "Создать проект"]
- "Подготовиться к экзамену" → ["Повторить теорию", "Решить задачи", "Сделать шпаргалки"]
- "Похудеть" → ["Составить план питания", "Начать тренировки", "Отслеживать прогресс"]

ПРИМЕРЫ ПРАВИЛЬНОГО ФОРМАТА ДАТ:
- "Завтра к врачу" → "2024-01-16T10:00:00+03:00"
- "Через неделю на тренировку" → "2024-01-22T18:00:00+03:00"
- "К концу месяца похудеть" → "2024-01-31T23:59:59+03:00"

КРИТИЧЕСКОЕ ТРЕБОВАНИЕ: Для обновления существующих задач ты ОБЯЗАН использовать ТОЛЬКО числовой ID задачи из списка "СУЩЕСТВУЮЩИЕ ЗАДАЧИ ПОЛЬЗОВАТЕЛЯ" выше. НЕ используй заголовки, описания или другие поля для идентификации задачи - ТОЛЬКО ID! НЕ создавай новые ID и НЕ используй отрицательные числа!

КРИТИЧЕСКИ ВАЖНО: 
- Заголовок задачи должен быть кратким (2-3 слова) и описывать суть задачи
- Описание добавляй только если заголовок недостаточно информативен
- Остальные поля (assignedUserId, assignedRoleId, deadline) указывай только если есть конкретные рекомендации
- Дедлайн указывай в формате ISO 8601 с часовым поясом +3 (Московское время): "YYYY-MM-DDTHH:mm:ss+03:00"
- Если в сообщении нет задач - верни пустые массивы
- ДЛЯ ОБНОВЛЕНИЯ ЗАДАЧ: id ОБЯЗАТЕЛЬНО должен быть взят из списка существующих задач выше
- НЕ ИСПОЛЬЗУЙ отрицательные числа, ноль или несуществующие ID для id
- Если не можешь точно определить ID существующей задачи - НЕ добавляй её в updatedTasks
- ПРИМЕР: Если пользователь говорит "измени задачу Создать API на Создать REST API", найди задачу с заголовком "Создать API" в списке выше и используй её ID (например, 5), а НЕ заголовок
- ОТВЕЧАЙ ТОЛЬКО JSON БЕЗ MARKDOWN БЛОКОВ И ДОПОЛНИТЕЛЬНОГО ТЕКСТА

КРИТИЧЕСКИ ВАЖНО:
- Извлекай задачи из ЛЮБЫХ упоминаний действий
- Если сомневаешься - создавай задачу
- Лучше создать лишнюю задачу, чем пропустить важную
- Превращай любые проблемы, планы, идеи в конкретные задачи
- Дедлайны указывай в формате ISO 8601 с московским временем: "2024-01-15T14:30:00+03:00"

ФОРМАТ ОТВЕТА (только JSON):
{
  "newTasks": [
    {
      "title": "Создать API",
      "description": "Описание задачи (опционально)",
      "assignedUserId": number | null,
      "assignedRoleId": number | null,      "deadline": "YYYY-MM-DDTHH:mm:ss+03:00" | null
    }
  ],
  "updatedTasks": [
    {
      "id": number, // ОБЯЗАТЕЛЬНО: только числовой ID из списка существующих задач выше (НЕ заголовок!)
      "title"?: "новое название", // новое название задачи (если изменяется)
      "description"?: "новое описание", // новое описание задачи (если изменяется)
      "assignedUserId"?: number, // ID пользователя для назначения (если изменяется)
      "assignedRoleId"?: number, // ID роли для назначения (если изменяется)
      "deadline"?: "YYYY-MM-DD" // новый дедлайн (если изменяется)
    }
  ]
}`;
  },

};